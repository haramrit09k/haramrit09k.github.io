{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Contact.js","Components/Testimonials.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","name","occupation","description","city","address","networks","social","map","network","key","href","url","className","id","title","Component","Footer","About","profilepic","image","bio","street","state","zip","phone","email","resumeDownload","resumedownload","src","alt","Resume","sanitizer","dompurify","sanitize","skillmessage","education","school","degree","graduated","achievements","work","company","Object","keys","roles","role","years","style","whiteSpace","dangerouslySetInnerHTML","__html","skills","projectImage","color","backgroundColor","Contact","head","document","querySelector","script","createElement","setAttribute","appendChild","message","contactmessage","data-url","minWidth","height","Testimonials","testimonials","user","text","Portfolio","projects","category","App","foo","resumeData","ReactGA","initialize","pageview","window","location","pathname","$","ajax","dataType","cache","success","setState","bind","error","xhr","status","err","console","log","alert","getResumeData","main","resume","portfolio","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5870f1d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var occupation= this.props.data.occupation;\n      var description= this.props.data.description;\n      var city= this.props.data.address.city;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      \n      <header id=\"home\">\n         <nav id=\"nav-wrap\">\n\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n            <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n            <ul id=\"nav\" className=\"nav\">\n               <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n               <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n               <li><a className=\"smoothscroll\" href=\"#resume\">Resume</a></li>\n               <li><a className=\"smoothscroll\" href=\"#portfolio\">Works</a></li>\n               <li><a className=\"smoothscroll\" href=\"#testimonials\">Testimonials</a></li>\n               <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul>\n\n         </nav>\n\n         <div className=\"row banner\">\n            <div className=\"banner-text\">\n               <h1 className=\"responsive-headline\">I'm {name}.</h1>\n               <h3>I'm a {city} based <span>{occupation}</span>. {description}.</h3>\n               <hr />\n               <ul className=\"social\">\n                  {networks}\n               </ul>\n            </div>\n         </div>\n\n         <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n         </p>\n\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2021 Haramrit Singh Khurana</li>\n              <li>Inspired by <a title=\"Tim Baker\" href=\"http://www.timbakerdev.com/\">Tim Baker</a></li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n      var name = this.props.data.name;\n      var profilepic= \"images/\"+this.props.data.image;\n      var bio = this.props.data.bio;\n      var street = this.props.data.address.street;\n      var city = this.props.data.address.city;\n      var state = this.props.data.address.state;\n      var zip = this.props.data.address.zip;\n      var phone= this.props.data.phone;\n      var email = this.props.data.email;\n      var resumeDownload = this.props.data.resumedownload;\n    }\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"three columns\">\n            <img className=\"profile-pic\"  src={profilepic} alt=\"Tim Baker Profile Pic\" />\n         </div>\n         <div className=\"nine columns main-col\">\n            <h2>About Me</h2>\n\n            <p>{bio}</p>\n            <div className=\"row\">\n               <div className=\"columns contact-details\">\n                  <h2>Contact Details</h2>\n                  <p className=\"address\">\n\t\t\t\t\t\t   <span>{name}</span><br />\n\t\t\t\t\t\t   <span>{street}<br />\n\t\t\t\t\t\t         {city} {state}, {zip}\n                   </span><br />\n\t\t\t\t\t\t   <span>{phone}</span><br />\n                     <span><a href=\"mailto:haramrit09k@gmail.com\">{email}</a></span>\n\t\t\t\t\t   </p>\n               </div>\n               <div className=\"columns download\">\n                  <p>\n                     <a href={resumeDownload} className=\"button\"><i className=\"fa fa-download\"></i>Download Resume</a>\n                  </p>\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport dompurify from 'dompurify';\n\n\n\nclass Resume extends Component {\n  render() {\n    const sanitizer = dompurify.sanitize;\n\n    if (this.props.data) {\n      var skillmessage = this.props.data.skillmessage;\n      var education = this.props.data.education.map(function (education) {\n        return <div key={education.school}><h3>{education.school}</h3>\n          <p className=\"info\">{education.degree} <span>&bull;</span><em className=\"date\">{education.graduated}</em></p>\n          <p>{education.description}<br></br>{education.achievements}</p></div>\n      })\n      var work = this.props.data.work.map(function (work) {\n        return <div key={work.company}><h3>{work.company}</h3>\n          {\n            Object.keys(work.roles).map(function (role) {\n              return <div key={role}>\n                <p className=\"info\">{work.roles[role].title}<span>&bull;</span> <em className=\"date\">{work.roles[role].years}</em></p>\n                <p style={{whiteSpace: 'pre-line'}} className=\"newline\" dangerouslySetInnerHTML={{__html: sanitizer(work.roles[role].description)}}></p>\n              </div>\n            })\n          }\n        </div>\n      })\n      var skills = this.props.data.skills.map(function (skills) {\n        var projectImage = 'images/tech/' + skills.image;\n        return <div key={skills.name} className=\"columns feature-item\">\n          <img className='skill' alt={skills.name} src={projectImage} />\n          <h5 style={{ color: 'white' }}>{skills.name}</h5>\n          <p>{skills.description}</p>\n        </div>\n      })\n    }\n\n    return (\n      <div>\n        <section id=\"resume\">\n\n          <div className=\"row education\">\n            <div className=\"three columns header-col\">\n              <h1><span>Education</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              <div className=\"row item\">\n                <div className=\"twelve columns\">\n                  {education}\n                </div>\n              </div>\n            </div>\n          </div>\n\n\n          <div className=\"row work\">\n\n            <div className=\"three columns header-col\">\n              <h1><span>Work</span></h1>\n            </div>\n\n            <div className=\"nine columns main-col\">\n              {work}\n            </div>\n          </div>\n        </section>\n\n        <section style={{ backgroundColor: '#2B2B2B' }} id='skills'>\n          <div className=\"row skill\">\n\n            <div className=\"three columns header-col\">\n              <h1 style={{ color: 'white' }}><span>Favorite Tech</span></h1>\n            </div>\n\n            <div>\n              <div className=\"nine columns main-col\"><p className=\"lead center\">{skillmessage}</p></div>\n              <ul className=\"bgrid-quarters s-bgrid-thirds cf\">\n                {skills}\n              </ul>\n            </div>\n          </div>\n        </section>\n      </div>\n\n    );\n  }\n}\n\nexport default Resume;","import React, { Component } from 'react';\nimport dompurify from 'dompurify';\n\nclass Contact extends Component {\n   componentDidMount() {\n      const head = document.querySelector('head');\n      const script = document.createElement('script');\n      script.setAttribute('src', 'https://assets.calendly.com/assets/external/widget.js');\n      head.appendChild(script);\n   }\n\n   render() {\n\n      const sanitizer = dompurify.sanitize;\n      if (this.props.data) {\n         // var name = this.props.data.name;\n         // var street = this.props.data.address.street;\n         // var city = this.props.data.address.city;\n         // var state = this.props.data.address.state;\n         // var zip = this.props.data.address.zip;\n         // var phone = this.props.data.phone;\n         // var email = this.props.data.email;\n         var message = this.props.data.contactmessage;\n      }\n\n      return (\n         <section id=\"contact\">\n\n            <div className=\"row section-head\">\n\n               {/* <div className=\"two columns header-col\"> */}\n\n               <h1>Get In Touch.</h1>\n\n               {/* </div> */}\n\n            </div>\n\n            <div className=\"row\">\n\n               <div className=\"six columns\">\n\n                  <p className=\"lead\" dangerouslySetInnerHTML={{__html: sanitizer(message)}}></p>\n\n               </div>\n\n\n               {/* calendly component starts*/}\n               <div className=\"four columns\">\n                  <div id=\"schedule_form\">\n                     <div\n                        className=\"calendly-inline-widget\"\n                        data-url=\"https://calendly.com/haramrit09k/meeting-via-portfolio?background_color=4d5055&text_color=ffffff&hide_event_type_details=1\"\n                        style={{ minWidth: '320px', height: '300px' }} />\n                  </div>\n               </div>\n               {/* calendly component ends */}\n\n\n               {/* <aside className=\"four columns footer-widgets\">\n                  <div className=\"widget widget_contact\">\n\n                     <h4>Address and Phone</h4>\n                     <p className=\"address\">\n                        <i className=\"fa fa-user\"></i>&emsp;{name}<br />\n                        <i className=\"fa fa-home\"></i>&emsp;{street} <br />\n                        {city}, {state} {zip}<br />\n                        <i className=\"fa fa-phone\"></i>&emsp;<span>{phone}</span><br />\n                        <i className=\"fa fa-envelope\"></i>&emsp;<span><a href=\"mailto:haramrit09k@gmail.com\">{email}</a></span>\n                     </p>\n                  </div>\n               </aside>\n                */}\n            \n            </div>\n         </section>\n      );\n   }\n}\n\nexport default Contact;\n","import React, { Component } from 'react';\n\nclass Testimonials extends Component {\n  render() {\n\n    if(this.props.data){\n      var testimonials = this.props.data.testimonials.map(function(testimonials){\n        return  <li key={testimonials.user}>\n            <blockquote>\n               <p>{testimonials.text}</p>\n               <cite>{testimonials.user}</cite>\n            </blockquote>\n         </li>\n      })\n    }\n\n    return (\n      <section id=\"testimonials\">\n         <div className='bg-blur'></div>\n      <div className=\"text-container\">\n         <div className=\"row\">\n\n            <div className=\"two columns header-col\">\n               <h1><span>Client Testimonials</span></h1>\n            </div>\n\n            <div className=\"ten columns flex-container\">\n                  <ul className=\"slides\">\n                      {testimonials}\n                  </ul>\n               </div>\n            </div>\n         </div>\n   </section>\n    );\n  }\n}\n\nexport default Testimonials;\n","import React, { Component } from 'react';\n\nclass Portfolio extends Component {\n  render() {\n\n    if(this.props.data){\n      var projects = this.props.data.projects.map(function(projects){\n        var projectImage = 'images/portfolio/'+projects.image;\n        return <div key={projects.title} className=\"columns portfolio-item\">\n           <div className=\"item-wrap\">\n            <a href={projects.url} title={projects.title}>\n               <img alt={projects.title} src={projectImage} />\n               <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                 <h5>{projects.title}</h5>\n                     <p>{projects.category}</p>\n                  </div>\n                </div>\n              <div className=\"link-icon\"><i className=\"fa fa-link\"></i></div>\n            </a>\n          </div>\n        </div>\n      })\n    }\n\n    return (\n      <section id=\"portfolio\">\n\n      <div className=\"row\">\n\n         <div className=\"twelve columns collapsed\">\n\n            <h1>Check Out Some of The Projects I Have Worked On</h1>\n\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n                {projects}\n            </div>\n          </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Resume from './Components/Resume';\nimport Contact from './Components/Contact';\nimport Testimonials from './Components/Testimonials';\nimport Portfolio from './Components/Portfolio';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'/resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        <About data={this.state.resumeData.main}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <Portfolio data={this.state.resumeData.portfolio}/>\n        <Testimonials data={this.state.resumeData.testimonials}/>\n        <Contact data={this.state.resumeData.main}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}